##Busco_Optimisation R script.  Used to determine the optimal combination of chromosomes + scaffolds in terms of single copy complete genes.  


table_all_busco <- read_delim("GenomeStats/full_table.tsv", delim = "\t", escape_double = FALSE,col_names = TRUE, trim_ws = TRUE, skip = 2)

names(table_all_busco) <- gsub(" ","",names(table_all_busco))
names(table_all_busco) [1]<- "Buscoid"

#No chr list
no_chr <- table_all_busco %>% filter(!str_detect(Sequence, "Chr"))

#Duplicates outside chrs
no_chr_dups <- no_chr %>% filter(Status=="Duplicated")

#Single Copies outside chrs
no_chr_comp <- no_chr %>% filter(Status=="Complete")


#Need to make scaffold score system.  
#How many completes from each scaf 
Add_comp <- no_chr_comp %>% group_by(Sequence) %>% count()
names(Add_comp)[2] <- "N_comp"
#How many duplicates from each scaf 
Add_dups <- no_chr_dups %>% group_by(Sequence) %>% count()
names(Add_dups)[2] <- "N_dups"
Ranking <- full_join(Add_comp,Add_dups)
Ranking <- Ranking %>% dplyr::mutate(N_comp = replace_na(N_comp, 0),N_dups= replace_na(N_dups, 0))

Ranking <- Ranking %>% dplyr::mutate(NetGain=N_comp-N_dups)

#Pairwise duplication hunt 
all_dups <- table_all_busco %>% filter(Status=="Duplicated")

Instance1 <- all_dups %>% group_by(Buscoid)  %>% filter(row_number()==1)
Instance2 <- all_dups %>% group_by(Buscoid)  %>% filter(row_number()==2)

ComboInstances <- full_join(Instance1,Instance2,by="Buscoid")[,c(1,3,12)]

Instances_between_Chrs <- ComboInstances %>% filter(str_detect(Sequence.x, "Chr"),str_detect(Sequence.y, "Chr"))%>%  filter(!Sequence.x==Sequence.y)
Instances_between_Chrs %>%group_by(Sequence.x ) %>% count()

Instances_between_Chrs_and_scaff <- ComboInstances %>% filter(str_detect(Sequence.x, "Chr"))%>% filter(!str_detect(Sequence.y, "Chr"))

Instances_between_Chrs_and_scaff_count<- Instances_between_Chrs_and_scaff%>%group_by(Sequence.y ) %>% count()%>% arrange(desc(n))

names(Instances_between_Chrs_and_scaff_count)[1] <- "Sequence"
names(Instances_between_Chrs_and_scaff_count)[2] <- "N_dup_chr"
Ranking <- full_join(Add_comp,Instances_between_Chrs_and_scaff_count)
Ranking <- Ranking %>% dplyr::mutate(N_comp = replace_na(N_comp, 0),N_dup_chr= replace_na(N_dup_chr, 0))

Ranking <- Ranking %>% dplyr::mutate(NetGain=N_comp-N_dup_chr)

Ranking$Sequence <-gsub("_RagTag","",Ranking$Sequence)

#Which scaffolds to add back into assembly with the chr's 

Toadd <- Ranking%>% filter(NetGain>=-4)

fileConn<-file("ToAdd.txt")
writeLines(Toadd$Sequence, fileConn)
close(fileConn)
